{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACT\\\\Project\\\\ho-flex\\\\src\\\\router\\\\Detail\\\\Detail.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport movieApi from \"../../api/movieApi\";\nimport tvApi from \"../../api/tvApi\";\n\nclass Detail extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: {\n        pathname\n      }\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\")\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: {\n          id\n        }\n      },\n      history: {\n        push\n      }\n    } = this.props;\n    const parseId = parseInt(id);\n    console.log(id);\n    console.log(parseId);\n\n    if (isNaN(parseId)) {\n      return push(\"/\");\n    }\n\n    const {\n      isMovie\n    } = this.state;\n\n    try {\n      if (isMovie) {\n        const {\n          data: result\n        } = await movieApi.detail(id);\n        this.setState({\n          result\n        });\n      } else {\n        const {\n          data: result\n        } = await tvApi.detail(id);\n        this.setState({\n          result\n        });\n      }\n    } catch {\n      this.setState({\n        error: \"can't get detail\"\n      });\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const {\n      result,\n      error,\n      loading\n    } = this.state;\n    console.log(this.state);\n    return /*#__PURE__*/React.createElement(DetailPresenter, {\n      result: result,\n      error: error,\n      loading: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 12\n      }\n    });\n  }\n\n}\n\nexport default Detail;","map":{"version":3,"sources":["D:/REACT/Project/ho-flex/src/router/Detail/Detail.js"],"names":["React","styled","DetailPresenter","movieApi","tvApi","Detail","Component","constructor","props","location","pathname","state","result","error","loading","isMovie","includes","componentDidMount","match","params","id","history","push","parseId","parseInt","console","log","isNaN","data","detail","setState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;;AAEA,MAAMC,MAAN,SAAqBL,KAAK,CAACM,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,UAAM;AACJC,MAAAA,QAAQ,EAAE;AAAEC,QAAAA;AAAF;AADN,QAEFF,KAFJ;AAIA,SAAKG,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,IADG;AAEXC,MAAAA,KAAK,EAAE,IAFI;AAGXC,MAAAA,OAAO,EAAE,IAHE;AAIXC,MAAAA,OAAO,EAAEL,QAAQ,CAACM,QAAT,CAAkB,SAAlB;AAJE,KAAb;AAMD;;AAED,QAAMC,iBAAN,GAA0B;AACxB,UAAM;AACJC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAACC,UAAAA;AAAD;AAAV,OADH;AAEJC,MAAAA,OAAO,EAAE;AAAEC,QAAAA;AAAF;AAFL,QAGF,KAAKd,KAHT;AAMA,UAAMe,OAAO,GAAGC,QAAQ,CAACJ,EAAD,CAAxB;AAEAK,IAAAA,OAAO,CAACC,GAAR,CAAYN,EAAZ;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;;AAEA,QAAII,KAAK,CAACJ,OAAD,CAAT,EAAoB;AAClB,aAAOD,IAAI,CAAC,GAAD,CAAX;AACD;;AAED,UAAM;AAAEP,MAAAA;AAAF,QAAc,KAAKJ,KAAzB;;AAEA,QAAI;AACF,UAAII,OAAJ,EAAa;AACX,cAAM;AAAEa,UAAAA,IAAI,EAAEhB;AAAR,YAAmB,MAAMT,QAAQ,CAAC0B,MAAT,CAAgBT,EAAhB,CAA/B;AACA,aAAKU,QAAL,CAAc;AAAElB,UAAAA;AAAF,SAAd;AACD,OAHD,MAGO;AACL,cAAM;AAAEgB,UAAAA,IAAI,EAAEhB;AAAR,YAAmB,MAAMR,KAAK,CAACyB,MAAN,CAAaT,EAAb,CAA/B;AACA,aAAKU,QAAL,CAAc;AAAElB,UAAAA;AAAF,SAAd;AACD;AACF,KARD,CAQE,MAAM;AACN,WAAKkB,QAAL,CAAc;AACZjB,QAAAA,KAAK,EAAE;AADK,OAAd;AAGD,KAZD,SAYU;AACR,WAAKiB,QAAL,CAAc;AACZhB,QAAAA,OAAO,EAAE;AADG,OAAd;AAGD;AACF;;AAEDiB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEnB,MAAAA,MAAF;AAAUC,MAAAA,KAAV;AAAiBC,MAAAA;AAAjB,QAA4B,KAAKH,KAAvC;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAjB;AACA,wBAAO,oBAAC,eAAD;AAAiB,MAAA,MAAM,EAAEC,MAAzB;AAAiC,MAAA,KAAK,EAAEC,KAAxC;AAA+C,MAAA,OAAO,EAAEC,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAzDkC;;AA4DrC,eAAeT,MAAf","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\nimport movieApi from \"../../api/movieApi\";\r\nimport tvApi from \"../../api/tvApi\";\r\n\r\nclass Detail extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const {\r\n      location: { pathname },\r\n    } = props;\r\n\r\n    this.state = {\r\n      result: null,\r\n      error: null,\r\n      loading: true,\r\n      isMovie: pathname.includes(\"/movie/\"),\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: { params: {id} },\r\n      history: { push },\r\n    } = this.props;\r\n\r\n\r\n    const parseId = parseInt(id);\r\n\r\n    console.log(id);\r\n    console.log(parseId);\r\n\r\n    if (isNaN(parseId)) {\r\n      return push(\"/\");\r\n    }\r\n\r\n    const { isMovie } = this.state;\r\n\r\n    try {\r\n      if (isMovie) {\r\n        const { data: result } = await movieApi.detail(id);\r\n        this.setState({ result });\r\n      } else {\r\n        const { data: result } = await tvApi.detail(id);\r\n        this.setState({ result });          \r\n      }\r\n    } catch {\r\n      this.setState({\r\n        error: \"can't get detail\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { result, error, loading} = this.state;\r\n    console.log(this.state);\r\n    return <DetailPresenter result={result} error={error} loading={loading} />\r\n  }\r\n}\r\n\r\nexport default Detail;\r\n"]},"metadata":{},"sourceType":"module"}