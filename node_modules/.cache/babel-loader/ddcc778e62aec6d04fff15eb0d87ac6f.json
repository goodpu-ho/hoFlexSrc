{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACT\\\\Project\\\\ho-flex\\\\src\\\\router\\\\Search\\\\Search.js\";\nimport React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport movieApi from \"../../api/movieApi\";\nimport tvApi from \"../../api/tvApi\";\n\nclass Search extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movieResult: null,\n      tvResult: null,\n      searchTerm: \"\",\n      loading: true,\n      error: null\n    };\n\n    this.handleSummit = event => {\n      event.preventDefault();\n      const {\n        searchTerm\n      } = this.state;\n\n      if (searchTerm !== \"\") {\n        this.searchByTerm();\n      }\n    };\n\n    this.searchByTerm = async () => {\n      console.log(\"serchByTerm\");\n      const {\n        searchTerm\n      } = this.state;\n\n      try {\n        const {\n          data: {\n            results: movieResult\n          }\n        } = await movieApi.search(searchTerm);\n        const {\n          data: {\n            results: tvResult\n          }\n        } = await tvApi.search(searchTerm);\n        this.setState({\n          movieResult,\n          tvResult\n        });\n        this.setState({\n          loading: true\n        });\n      } catch {\n        this.setState({\n          error: \"Can't get Movie infomation\"\n        });\n      } finally {\n        this.setState({\n          loading: false\n        });\n      }\n    };\n\n    this.updateTerm = event => {\n      const {\n        target: {\n          value\n        }\n      } = event;\n      this.setState({\n        searchTerm: value\n      });\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const {\n      movieResult,\n      tvResult,\n      searchTerm,\n      loading,\n      error\n    } = this.state;\n    console.log(this.state);\n    return /*#__PURE__*/React.createElement(SearchPresenter, {\n      movieResult: movieResult,\n      tvResult: tvResult,\n      searchTerm: searchTerm,\n      loading: loading,\n      error: error,\n      handleSummit: this.searchByTerm,\n      updateTerm: this.updateTerm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["D:/REACT/Project/ho-flex/src/router/Search/Search.js"],"names":["React","SearchPresenter","movieApi","tvApi","Search","Component","state","movieResult","tvResult","searchTerm","loading","error","handleSummit","event","preventDefault","searchByTerm","console","log","data","results","search","setState","updateTerm","target","value","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;;AAEA,MAAMC,MAAN,SAAqBJ,KAAK,CAACK,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACnCC,KADmC,GAC3B;AACNC,MAAAA,WAAW,EAAE,IADP;AAENC,MAAAA,QAAQ,EAAE,IAFJ;AAGNC,MAAAA,UAAU,EAAE,EAHN;AAINC,MAAAA,OAAO,EAAE,IAJH;AAKNC,MAAAA,KAAK,EAAE;AALD,KAD2B;;AAAA,SASnCC,YATmC,GASnBC,KAAD,IAAW;AACxBA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAM;AAAEL,QAAAA;AAAF,UAAiB,KAAKH,KAA5B;;AACA,UAAIG,UAAU,KAAK,EAAnB,EAAuB;AACrB,aAAKM,YAAL;AACD;AACF,KAfkC;;AAAA,SAiBnCA,YAjBmC,GAiBpB,YAAY;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,YAAM;AAAER,QAAAA;AAAF,UAAiB,KAAKH,KAA5B;;AACA,UAAI;AACF,cAAM;AACJY,UAAAA,IAAI,EAAE;AAAEC,YAAAA,OAAO,EAAEZ;AAAX;AADF,YAEF,MAAML,QAAQ,CAACkB,MAAT,CAAgBX,UAAhB,CAFV;AAGA,cAAM;AACJS,UAAAA,IAAI,EAAE;AAAEC,YAAAA,OAAO,EAAEX;AAAX;AADF,YAEF,MAAML,KAAK,CAACiB,MAAN,CAAaX,UAAb,CAFV;AAIA,aAAKY,QAAL,CAAc;AACZd,UAAAA,WADY;AAEZC,UAAAA;AAFY,SAAd;AAIA,aAAKa,QAAL,CAAc;AAAEX,UAAAA,OAAO,EAAE;AAAX,SAAd;AACD,OAbD,CAaE,MAAM;AACN,aAAKW,QAAL,CAAc;AACZV,UAAAA,KAAK,EAAE;AADK,SAAd;AAGD,OAjBD,SAiBU;AACR,aAAKU,QAAL,CAAc;AACZX,UAAAA,OAAO,EAAE;AADG,SAAd;AAGD;AACF,KA1CkC;;AAAA,SA4CnCY,UA5CmC,GA4CrBT,KAAD,IAAW;AACtB,YAAM;AACJU,QAAAA,MAAM,EAAE;AAAEC,UAAAA;AAAF;AADJ,UAEFX,KAFJ;AAGA,WAAKQ,QAAL,CAAc;AACZZ,QAAAA,UAAU,EAAEe;AADA,OAAd;AAGD,KAnDkC;AAAA;;AAqDnCC,EAAAA,iBAAiB,GAAE,CAElB;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEnB,MAAAA,WAAF;AAAeC,MAAAA,QAAf;AAAyBC,MAAAA,UAAzB;AAAqCC,MAAAA,OAArC;AAA8CC,MAAAA;AAA9C,QAAwD,KAAKL,KAAnE;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAjB;AAEA,wBACE,oBAAC,eAAD;AACE,MAAA,WAAW,EAAEC,WADf;AAEE,MAAA,QAAQ,EAAEC,QAFZ;AAGE,MAAA,UAAU,EAAEC,UAHd;AAIE,MAAA,OAAO,EAAEC,OAJX;AAKE,MAAA,KAAK,EAAEC,KALT;AAME,MAAA,YAAY,EAAE,KAAKI,YANrB;AAOE,MAAA,UAAU,EAAE,KAAKO,UAPnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAWD;;AAxEkC;;AA2ErC,eAAelB,MAAf","sourcesContent":["import React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport movieApi from \"../../api/movieApi\";\r\nimport tvApi from \"../../api/tvApi\";\r\n\r\nclass Search extends React.Component {\r\n  state = {\r\n    movieResult: null,\r\n    tvResult: null,\r\n    searchTerm: \"\",\r\n    loading: true,\r\n    error: null,\r\n  };\r\n\r\n  handleSummit = (event) => {\r\n    event.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm !== \"\") {\r\n      this.searchByTerm();\r\n    }\r\n  };\r\n\r\n  searchByTerm = async () => {\r\n    console.log(\"serchByTerm\");\r\n    const { searchTerm } = this.state;\r\n    try {\r\n      const {\r\n        data: { results: movieResult },\r\n      } = await movieApi.search(searchTerm);\r\n      const {\r\n        data: { results: tvResult },\r\n      } = await tvApi.search(searchTerm);\r\n      \r\n      this.setState({\r\n        movieResult,\r\n        tvResult,\r\n      });\r\n      this.setState({ loading: true });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't get Movie infomation\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  updateTerm = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    this.setState({\r\n      searchTerm: value,\r\n    });\r\n  };\r\n\r\n  componentDidMount(){\r\n      \r\n  }\r\n\r\n  render() {\r\n    const { movieResult, tvResult, searchTerm, loading, error } = this.state;\r\n    console.log(this.state);\r\n    \r\n    return (\r\n      <SearchPresenter\r\n        movieResult={movieResult}\r\n        tvResult={tvResult}\r\n        searchTerm={searchTerm}        \r\n        loading={loading}\r\n        error={error}\r\n        handleSummit={this.searchByTerm}\r\n        updateTerm={this.updateTerm}\r\n      ></SearchPresenter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n"]},"metadata":{},"sourceType":"module"}