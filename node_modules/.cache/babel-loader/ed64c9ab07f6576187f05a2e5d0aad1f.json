{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACT\\\\Project\\\\ho-flex\\\\src\\\\router\\\\Search\\\\Search.js\";\nimport React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\n\nclass Search extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movieResult: null,\n      tvResult: null,\n      searchTerm: \"\",\n      loading: true,\n      error: null\n    };\n\n    this.handleSummit = event => {\n      event.preventDefault();\n      const {\n        searchTerm\n      } = this.state;\n\n      if (searchTerm !== \"\") {\n        this.searchByTerm();\n      }\n    };\n\n    this.searchByTerm = async () => {\n      console.log(\"serchByTerm\");\n      const {\n        searchTerm\n      } = this.state;\n\n      try {\n        const {\n          data: {\n            results: movieResult\n          }\n        } = await movieApi.search(searchTerm);\n        const {\n          data: {\n            results: tvResult\n          }\n        } = await tvApi.search(searchTerm);\n        this.setState({\n          movieResult,\n          tvResult\n        });\n        this.setState({\n          loading: true\n        });\n      } catch {\n        this.setState({\n          error: \"Can't get Movie infomation\"\n        });\n      } finally {\n        this.setState({\n          loading: false\n        });\n      }\n    };\n\n    this.updateTerm = event => {\n      const {\n        target: {\n          value\n        }\n      } = event;\n      this.setState({\n        searchTerm: value\n      });\n    };\n  }\n\n  render() {\n    const {\n      movieResult,\n      tvResult,\n      searchTerm,\n      loading,\n      error\n    } = this.state;\n    return /*#__PURE__*/React.createElement(SearchPresenter, {\n      searchTerm: searchTerm,\n      updateTerm: this.updateTerm,\n      handleSummit: this.searchByTerm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["D:/REACT/Project/ho-flex/src/router/Search/Search.js"],"names":["React","SearchPresenter","Search","Component","state","movieResult","tvResult","searchTerm","loading","error","handleSummit","event","preventDefault","searchByTerm","console","log","data","results","movieApi","search","tvApi","setState","updateTerm","target","value","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,MAAMC,MAAN,SAAqBF,KAAK,CAACG,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAEjCC,KAFiC,GAEzB;AACJC,MAAAA,WAAW,EAAG,IADV;AAEJC,MAAAA,QAAQ,EAAG,IAFP;AAGJC,MAAAA,UAAU,EAAG,EAHT;AAIJC,MAAAA,OAAO,EAAG,IAJN;AAKJC,MAAAA,KAAK,EAAG;AALJ,KAFyB;;AAAA,SAUjCC,YAViC,GAUjBC,KAAD,IAAW;AACtBA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAM;AAACL,QAAAA;AAAD,UAAe,KAAKH,KAA1B;;AACA,UAAGG,UAAU,KAAK,EAAlB,EAAqB;AACjB,aAAKM,YAAL;AACH;AACJ,KAhBgC;;AAAA,SAkBjCA,YAlBiC,GAkBlB,YAAY;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,YAAM;AAACR,QAAAA;AAAD,UAAe,KAAKH,KAA1B;;AACA,UAAG;AACC,cAAM;AAACY,UAAAA,IAAI,EAAC;AAACC,YAAAA,OAAO,EAACZ;AAAT;AAAN,YAA+B,MAAMa,QAAQ,CAACC,MAAT,CAAgBZ,UAAhB,CAA3C;AACA,cAAM;AAACS,UAAAA,IAAI,EAAC;AAACC,YAAAA,OAAO,EAACX;AAAT;AAAN,YAA4B,MAAMc,KAAK,CAACD,MAAN,CAAaZ,UAAb,CAAxC;AACA,aAAKc,QAAL,CAAc;AACVhB,UAAAA,WADU;AAEVC,UAAAA;AAFU,SAAd;AAIA,aAAKe,QAAL,CAAc;AAACb,UAAAA,OAAO,EAAC;AAAT,SAAd;AACH,OARD,CAQE,MAAM;AACJ,aAAKa,QAAL,CAAc;AACVZ,UAAAA,KAAK,EAAC;AADI,SAAd;AAGH,OAZD,SAYU;AACN,aAAKY,QAAL,CAAc;AACVb,UAAAA,OAAO,EAAC;AADE,SAAd;AAGH;AACJ,KAtCgC;;AAAA,SAwCjCc,UAxCiC,GAwCnBX,KAAD,IAAW;AACpB,YAAM;AAACY,QAAAA,MAAM,EAAC;AAACC,UAAAA;AAAD;AAAR,UAAmBb,KAAzB;AACA,WAAKU,QAAL,CAAc;AACVd,QAAAA,UAAU,EAACiB;AADD,OAAd;AAGH,KA7CgC;AAAA;;AA+CjCC,EAAAA,MAAM,GAAE;AAEJ,UAAM;AAACpB,MAAAA,WAAD;AAAcC,MAAAA,QAAd;AAAwBC,MAAAA,UAAxB;AAAoCC,MAAAA,OAApC;AAA6CC,MAAAA;AAA7C,QAAsD,KAAKL,KAAjE;AAEA,wBACI,oBAAC,eAAD;AACI,MAAA,UAAU,EAAEG,UADhB;AAEI,MAAA,UAAU,EAAI,KAAKe,UAFvB;AAGI,MAAA,YAAY,EAAI,KAAKT,YAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAOH;;AA1DgC;;AA6DrC,eAAeX,MAAf","sourcesContent":["import React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\n\r\nclass Search extends React.Component {\r\n\r\n    state = {\r\n        movieResult : null,\r\n        tvResult : null,\r\n        searchTerm : \"\",\r\n        loading : true,\r\n        error : null\r\n    };\r\n\r\n    handleSummit = (event) => {\r\n        event.preventDefault();\r\n        const {searchTerm} = this.state;\r\n        if(searchTerm !== \"\"){\r\n            this.searchByTerm();\r\n        }\r\n    }\r\n\r\n    searchByTerm = async () => {\r\n        console.log(\"serchByTerm\");\r\n        const {searchTerm} = this.state;\r\n        try{\r\n            const {data:{results:movieResult}} = await movieApi.search(searchTerm);\r\n            const {data:{results:tvResult}} = await tvApi.search(searchTerm);            \r\n            this.setState({\r\n                movieResult,\r\n                tvResult\r\n            });\r\n            this.setState({loading:true});\r\n        } catch {\r\n            this.setState({\r\n                error:\"Can't get Movie infomation\"\r\n            });\r\n        } finally {\r\n            this.setState({\r\n                loading:false\r\n            });\r\n        }\r\n    }\r\n\r\n    updateTerm = (event) => {\r\n        const {target:{value}} = event;\r\n        this.setState({\r\n            searchTerm:value\r\n        })\r\n    }\r\n\r\n    render(){\r\n\r\n        const {movieResult, tvResult, searchTerm, loading, error} = this.state;\r\n\r\n        return(\r\n            <SearchPresenter\r\n                searchTerm={searchTerm}\r\n                updateTerm = {this.updateTerm}\r\n                handleSummit = {this.searchByTerm}\r\n            ></SearchPresenter>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search;"]},"metadata":{},"sourceType":"module"}